stages:
  - ðŸ‘®quality
  - ðŸ›°sonar
  - ðŸ‘·build
  - ðŸš€deploy

################################################################
# 0) SONAR                                                     #
################################################################

sonar:analyze:
  stage: ðŸ›°sonar
  before_script:
    - nvm install
    - nvm use
    - yarn
    - jabba use
    - yarn test -- --coverage
    - ./ci/updateSonarProjectVersion.sh
  script:
    - sonar-scanner
  allow_failure: true
  tags:
    - React-Native
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

################################################################
# 0) QUALITY                                                   #
################################################################

.quality: &quality
  stage: ðŸ‘®quality
  before_script:
    - nvm install
    - nvm use
    - yarn
  tags:
    - React-Native
  allow_failure: false
  only:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'

typescript:
  <<: *quality
  script:
    - yarn tsc

prettier:
  <<: *quality
  script:
    - yarn prettier

eslint:
  <<: *quality
  script:
    - yarn lint

jest:
  <<: *quality
  script:
    - yarn test --coverage

################################################################
# 1) BUILD                                                     #
################################################################
build:android:
  stage: ðŸ‘·build
  before_script:
    - nvm install
    - nvm use
    - yarn
    - jabba use
    - cd ci/fastlane && bundle install
  script:
    - bundle exec fastlane android build
  tags:
    - React-Native
  allow_failure: true
  artifacts:
    paths:
      - android/app/build/outputs/bundle
      - android/app/build/outputs/apk
    expire_in: 2 weeks
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'

build:ios:
  stage: ðŸ‘·build
  before_script:
    - nvm install
    - nvm use
    - npm install
    - cd ci/fastlane && bundle install
    - bundle exec "cd ../../ios && pod install --repo-update"
  script:
    - bundle exec fastlane ios build
  tags:
    - Xcode14
  allow_failure: true
  artifacts:
    paths:
      - ios/build/ipa/
    expire_in: 2 weeks
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'

################################################################
# 2) DEPLOY                                                    #
################################################################

deploy:ios:
  stage: ðŸš€deploy
  before_script:
    - cd ci/
    - bundle install
  script:
    - bundle exec fastlane ios deploy_to_store
  tags:
    - React-Native
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'

deploy:android:
  stage: ðŸš€deploy
  before_script:
    - cd ci/
    - bundle install
  script:
    - bundle exec fastlane android deploy_to_store
  tags:
    - React-Native
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
    - if: $CI_COMMIT_BRANCH =~ /^release.*$/
    - if: $CI_COMMIT_BRANCH =~ /^hotfix.*$/
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^develop$/'
